.center {
  text-align: center;
}

@each $alignment in center start end stretch {
  .content-#{$alignment} {
    place-content: $alignment;
  }
  .items-#{$alignment} {
    place-items: $alignment;
  }
  .self-#{$alignment} {
    align-self: $alignment;
  }
  .align-#{$alignment} {
    align-items: $alignment;
  }
  .justify-#{$alignment} {
    justify-content: $alignment;
  }
}

.bold {
  font-weight: bold;
}
.text-invert {
  color: white;
}

.inline-logo {
  height: 1.5em;
  vertical-align: middle;
}

.no-margins {
  margin: 0;
}
.unpadded {
  padding: 0;
}
.uppercase {
  text-transform: uppercase;
}

.meme-text {
  position: relative;
  z-index: 1;
  font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
  -webkit-text-fill-color: white;
  -webkit-text-stroke-color: black;
  -webkit-text-stroke-width: 0.05em;

  @media print {
    -webkit-text-fill-color: unset;
    -webkit-text-stroke-color: unset;
    -webkit-text-stroke-width: unset;
    color: white;
  }
}

.full-media {
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.blink {
  animation: blink 1s steps(1) infinite;
  @media print {
    animation: none;
  }
}

@keyframes blink {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.flex {
  display: flex;
  &.column {
    flex-direction: column;
  }
  &.wrap {
    flex-wrap: wrap;
  }
}

[grid] {
  display: grid;
}
@for $i from 1 through 4 {
  [grid='#{$i}'] {
    grid-template-columns: repeat(#{$i}, minmax(0, max-content));
  }
  .col-#{$i} {
    grid-column-start: #{$i};
  }
  .colspan-#{$i} {
    grid-column-end: span #{$i};
  }
  .row-#{$i} {
    grid-row-start: #{$i};
  }
  .rowspan-#{$i} {
    grid-row-end: span #{$i};
  }
}

.two-columns {
  display: flex;
  flex-wrap: wrap;

  > * {
    flex: 0 0 auto;
    width: calc(50% - 0.5em);

    &:nth-child(odd) {
      margin-right: 0.5em;
    }
    &:nth-child(even) {
      margin-left: 0.5em;
    }
  }
}

$motion-entrance-timing-fn: cubic-bezier(0.3, 1.21, 0.79, 0.91);

@keyframes from-top {
  0% {
    transform: translateY(-2em);
  }
  100% {
    transform: translateY(0em);
  }
}
@keyframes from-right {
  0% {
    transform: translateX(4em);
  }
  100% {
    transform: translateX(0em);
  }
}
@keyframes from-bottom {
  0% {
    transform: translateY(2em);
  }
  100% {
    transform: translateY(0em);
  }
}
@keyframes from-left {
  0% {
    transform: translateX(-4em);
  }
  100% {
    transform: translateX(0em);
  }
}
@keyframes from-above {
  0% {
    transform: scale(3);
  }
  100% {
    transform: scale(1);
  }
}

p-deck:not([mode='speaker']) {
  @each $dir in top right bottom left above below {
    p-fragment[aria-hidden='false'] .from-#{$dir},
    p-slide[aria-hidden='false'] .from-#{$dir}:not(p-fragment > .from-#{$dir}) {
      animation: from-#{$dir} var(--fragment-duration, 300ms) $motion-entrance-timing-fn 1 forwards;
    }
  }
}
.from-above,
.from-below {
  position: absolute;
}

.overlay-banner {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  transform: translateY(-50%);
  background-color: rgba(black, 0.5);
  color: white;
  text-shadow: 0 0.1em 0.2em rgba(black, 0.5);
  text-align: center;
  line-height: 1.5;
  z-index: 10;
}

.sepia {
  filter: contrast(0.65) sepia(1) hue-rotate(-15deg) saturate(0.7) brightness(0.92);
}

$fade-border-image-x: linear-gradient(
  to right,
  transparent,
  black var(--fade-border-width, 1em),
  black calc(100% - var(--fade-border-width, 1em)),
  transparent
);
$fade-border-image-y: linear-gradient(
  to bottom,
  transparent,
  black var(--fade-border-width, 1em),
  black calc(100% - var(--fade-border-width, 1em)),
  transparent
);
.fade-borders-x {
  -webkit-mask-image: $fade-border-image-x;
  mask-image: $fade-border-image-x;
}
.fade-borders-y {
  -webkit-mask-image: $fade-border-image-y;
  mask-image: $fade-border-image-y;
}
.fade-borders {
  -webkit-mask-image: $fade-border-image-x, $fade-border-image-y;
  mask-image: $fade-border-image-x, $fade-border-image-y;
  -webkit-mask-composite: source-in;
  mask-composite: intersect;
}

.stack:not(p-slide[aria-hidden='true']) {
  display: grid;
  grid-template-areas: 'here';
  place-items: stretch;

  > * {
    grid-area: here;
  }
}
